-- CHECK THE DATA FROM SNOWFLAKE SAMPLE DATASET

SELECT COUNT(*) FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF10000.CUSTOMER;

CREATE DATABASE ClusteringDemo;

USE DATABASE ClusteringDemo;


-- CREATE TABLE WITHOUT CLUSTER

CREATE OR REPLACE TRANSIENT TABLE ClusteringDemo.PUBLIC.CUSTOMER_NOCLUSTER
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF10000.CUSTOMER;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT)');

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT,C_CUSTKEY)');


-- CREATE NON CLUSTERED TABLE WITH ORDER BY CLAUSE

CREATE OR REPLACE TRANSIENT TABLE ClusteringDemo.PUBLIC.CUSTOMER_ORDERED
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF10000.CUSTOMER ORDER BY C_MKTSEGMENT;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_ORDERED','(C_MKTSEGMENT)');


-- CREATE TABLE WITH CLUSTER

CREATE OR REPLACE TRANSIENT TABLE CUSTOMER_CLUSTERED (
	C_CUSTKEY NUMBER(38,0) NOT NULL,
	C_NAME VARCHAR(25) NOT NULL,
	C_ADDRESS VARCHAR(40) NOT NULL,
	C_NATIONKEY NUMBER(38,0) NOT NULL,
	C_PHONE VARCHAR(15) NOT NULL,
	C_ACCTBAL NUMBER(12,2) NOT NULL,
	C_MKTSEGMENT VARCHAR(10),
	C_COMMENT VARCHAR(117)
) CLUSTER BY (C_MKTSEGMENT);


--INSERT DATA

INSERT INTO ClusteringDemo.PUBLIC.CUSTOMER_CLUSTERED
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF10000.CUSTOMER;


-- CHECK CLUSTERING INFORMATION

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_CLUSTERED');


-- DISBALE METADATA CACHE TO SEE THE PERFORMANCE

ALTER SESSION SET USE_CACHED_RESULT = FALSE;


--CHECK THE PERFORMANCE

SELECT COUNT(*) FROM ClusteringDemo.PUBLIC.CUSTOMER_NOCLUSTER WHERE C_MKTSEGMENT = 'FURNITURE'; --15.8 secs

SELECT COUNT(*) FROM ClusteringDemo.PUBLIC.CUSTOMER_ORDERED WHERE C_MKTSEGMENT = 'FURNITURE'; --682 ms

SELECT COUNT(*) FROM ClusteringDemo.PUBLIC.CUSTOMER_CLUSTERED WHERE C_MKTSEGMENT = 'FURNITURE'; --668 ms